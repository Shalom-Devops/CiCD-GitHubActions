---
name: Java-CI/CD
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  SONAR_SCANNER_VERSION: 4.4.0.2170
  SONAR_SCANNER_HOME: /opt/sonar-scanner-${SONAR_SCANNER_VERSION}
  IMAGE_NAME: pavan9999/github-actions
  IMAGE_TAG: moonpage
  JMETER_VERSION: 5.4
  JMETER_HOME: /opt/jmeter-${JMETER_VERSION}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: "1.8"
          distribution: adopt
          cache: maven
      - name: Build with Maven
        run: mvn clean install
      - name: Install SonarQube Scanner
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_SCANNER_VERSION}.zip
          unzip sonar-scanner-cli-${SONAR_SCANNER_VERSION}.zip
          rm sonar-scanner-cli-${SONAR_SCANNER_VERSION}.zip

      - name: Run SonarQube Scan
        run: |
          export SONAR_SCANNER_OPTS="-Xmx512m"
          ${SONAR_SCANNER_HOME}/bin/sonar-scanner \
          -Dsonar.projectKey=pavan-gadapu \
          -Dsonar.sources=. \
          -Dsonar.host.url=https://sonarcloud.io/ \
          -Dsonar.login=2217d69b7b99caebbb4c645410e75ae3a5aa8b34
      - name: Dependency-Check (SCA)
        run: |
           wget https://github.com/jeremylong/DependencyCheck/releases/download/v6.0.5/dependency-check-6.0.5-release.zip
           unzip dependency-check-6.0.5-release.zip
           chmod -R 775 dependency-check/bin/dependency-check.sh
           cp /home/runner/work/CiCD-GitHubActions/CiCD-GitHubActions/target/*.war dependency-check
           cd dependency-check
           ./bin/dependency-check.sh --project test --format HTML --scan *.war
           ls -lrt && pwd && cat dependency-check-report.html
           cd ..
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
          name: Dependency check report
          path: ${{github.workspace}}/reports

      - name: Docker-Image-Build & Push
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: ${IMAGE_NAME}
          tags: ${IMAGE_TAG}
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Install Trivy 
        run: |
         sudo apt-get update
          sudo apt-get install -y curl
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/master/contrib/install.sh | sh -s -- -b /usr/local/bin

      - name: Scan Docker Image
        run: |
          trivy image ${IMAGE_NAME}:${IMAGE_TAG}   
      - name: Upload scan results
        uses: actions/upload-artifact@v2
        with:
          name: trivy-scan-results
          path: scan-results.json
  
